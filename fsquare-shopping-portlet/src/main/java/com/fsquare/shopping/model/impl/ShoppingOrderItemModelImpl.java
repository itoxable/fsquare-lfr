package com.fsquare.shopping.model.impl;

import com.fsquare.shopping.model.ShoppingOrderItem;
import com.fsquare.shopping.model.ShoppingOrderItemModel;
import com.fsquare.shopping.model.ShoppingOrderItemSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the ShoppingOrderItem service. Represents a row in the &quot;FsquareShopping_ShoppingOrderItem&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.fsquare.shopping.model.ShoppingOrderItemModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ShoppingOrderItemImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ShoppingOrderItemImpl
 * @see com.fsquare.shopping.model.ShoppingOrderItem
 * @see com.fsquare.shopping.model.ShoppingOrderItemModel
 * @generated
 */
@JSON(strict = true)
public class ShoppingOrderItemModelImpl extends BaseModelImpl<ShoppingOrderItem>
    implements ShoppingOrderItemModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a shopping order item model instance should use the {@link com.fsquare.shopping.model.ShoppingOrderItem} interface instead.
     */
    public static final String TABLE_NAME = "FsquareShopping_ShoppingOrderItem";
    public static final Object[][] TABLE_COLUMNS = {
            { "shoppingOrderItemId", Types.BIGINT },
            { "shoppingOrderId", Types.BIGINT },
            { "articleId", Types.VARCHAR },
            { "sku", Types.VARCHAR },
            { "name", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "properties", Types.VARCHAR },
            { "price", Types.DOUBLE },
            { "quantity", Types.INTEGER },
            { "shippedDate", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table FsquareShopping_ShoppingOrderItem (shoppingOrderItemId LONG not null primary key,shoppingOrderId LONG,articleId VARCHAR(75) null,sku VARCHAR(75) null,name VARCHAR(200) null,description VARCHAR(1000) null,properties VARCHAR(75) null,price DOUBLE,quantity INTEGER,shippedDate DATE null)";
    public static final String TABLE_SQL_DROP = "drop table FsquareShopping_ShoppingOrderItem";
    public static final String ORDER_BY_JPQL = " ORDER BY shoppingOrderItem.name ASC, shoppingOrderItem.description ASC";
    public static final String ORDER_BY_SQL = " ORDER BY FsquareShopping_ShoppingOrderItem.name ASC, FsquareShopping_ShoppingOrderItem.description ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.fsquare.shopping.model.ShoppingOrderItem"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.fsquare.shopping.model.ShoppingOrderItem"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.fsquare.shopping.model.ShoppingOrderItem"),
            true);
    public static long ARTICLEID_COLUMN_BITMASK = 1L;
    public static long SHOPPINGORDERID_COLUMN_BITMASK = 2L;
    public static long SHOPPINGORDERITEMID_COLUMN_BITMASK = 4L;
    public static long NAME_COLUMN_BITMASK = 8L;
    public static long DESCRIPTION_COLUMN_BITMASK = 16L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.fsquare.shopping.model.ShoppingOrderItem"));
    private static ClassLoader _classLoader = ShoppingOrderItem.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            ShoppingOrderItem.class
        };
    private long _shoppingOrderItemId;
    private long _originalShoppingOrderItemId;
    private boolean _setOriginalShoppingOrderItemId;
    private long _shoppingOrderId;
    private long _originalShoppingOrderId;
    private boolean _setOriginalShoppingOrderId;
    private String _articleId;
    private String _originalArticleId;
    private String _sku;
    private String _name;
    private String _description;
    private String _properties;
    private double _price;
    private int _quantity;
    private Date _shippedDate;
    private long _columnBitmask;
    private ShoppingOrderItem _escapedModel;

    public ShoppingOrderItemModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static ShoppingOrderItem toModel(ShoppingOrderItemSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        ShoppingOrderItem model = new ShoppingOrderItemImpl();

        model.setShoppingOrderItemId(soapModel.getShoppingOrderItemId());
        model.setShoppingOrderId(soapModel.getShoppingOrderId());
        model.setArticleId(soapModel.getArticleId());
        model.setSku(soapModel.getSku());
        model.setName(soapModel.getName());
        model.setDescription(soapModel.getDescription());
        model.setProperties(soapModel.getProperties());
        model.setPrice(soapModel.getPrice());
        model.setQuantity(soapModel.getQuantity());
        model.setShippedDate(soapModel.getShippedDate());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<ShoppingOrderItem> toModels(
        ShoppingOrderItemSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<ShoppingOrderItem> models = new ArrayList<ShoppingOrderItem>(soapModels.length);

        for (ShoppingOrderItemSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _shoppingOrderItemId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setShoppingOrderItemId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _shoppingOrderItemId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return ShoppingOrderItem.class;
    }

    @Override
    public String getModelClassName() {
        return ShoppingOrderItem.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("shoppingOrderItemId", getShoppingOrderItemId());
        attributes.put("shoppingOrderId", getShoppingOrderId());
        attributes.put("articleId", getArticleId());
        attributes.put("sku", getSku());
        attributes.put("name", getName());
        attributes.put("description", getDescription());
        attributes.put("properties", getProperties());
        attributes.put("price", getPrice());
        attributes.put("quantity", getQuantity());
        attributes.put("shippedDate", getShippedDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long shoppingOrderItemId = (Long) attributes.get("shoppingOrderItemId");

        if (shoppingOrderItemId != null) {
            setShoppingOrderItemId(shoppingOrderItemId);
        }

        Long shoppingOrderId = (Long) attributes.get("shoppingOrderId");

        if (shoppingOrderId != null) {
            setShoppingOrderId(shoppingOrderId);
        }

        String articleId = (String) attributes.get("articleId");

        if (articleId != null) {
            setArticleId(articleId);
        }

        String sku = (String) attributes.get("sku");

        if (sku != null) {
            setSku(sku);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        String properties = (String) attributes.get("properties");

        if (properties != null) {
            setProperties(properties);
        }

        Double price = (Double) attributes.get("price");

        if (price != null) {
            setPrice(price);
        }

        Integer quantity = (Integer) attributes.get("quantity");

        if (quantity != null) {
            setQuantity(quantity);
        }

        Date shippedDate = (Date) attributes.get("shippedDate");

        if (shippedDate != null) {
            setShippedDate(shippedDate);
        }
    }

    @JSON
    @Override
    public long getShoppingOrderItemId() {
        return _shoppingOrderItemId;
    }

    @Override
    public void setShoppingOrderItemId(long shoppingOrderItemId) {
        _columnBitmask |= SHOPPINGORDERITEMID_COLUMN_BITMASK;

        if (!_setOriginalShoppingOrderItemId) {
            _setOriginalShoppingOrderItemId = true;

            _originalShoppingOrderItemId = _shoppingOrderItemId;
        }

        _shoppingOrderItemId = shoppingOrderItemId;
    }

    public long getOriginalShoppingOrderItemId() {
        return _originalShoppingOrderItemId;
    }

    @JSON
    @Override
    public long getShoppingOrderId() {
        return _shoppingOrderId;
    }

    @Override
    public void setShoppingOrderId(long shoppingOrderId) {
        _columnBitmask |= SHOPPINGORDERID_COLUMN_BITMASK;

        if (!_setOriginalShoppingOrderId) {
            _setOriginalShoppingOrderId = true;

            _originalShoppingOrderId = _shoppingOrderId;
        }

        _shoppingOrderId = shoppingOrderId;
    }

    public long getOriginalShoppingOrderId() {
        return _originalShoppingOrderId;
    }

    @JSON
    @Override
    public String getArticleId() {
        if (_articleId == null) {
            return StringPool.BLANK;
        } else {
            return _articleId;
        }
    }

    @Override
    public void setArticleId(String articleId) {
        _columnBitmask |= ARTICLEID_COLUMN_BITMASK;

        if (_originalArticleId == null) {
            _originalArticleId = _articleId;
        }

        _articleId = articleId;
    }

    public String getOriginalArticleId() {
        return GetterUtil.getString(_originalArticleId);
    }

    @JSON
    @Override
    public String getSku() {
        if (_sku == null) {
            return StringPool.BLANK;
        } else {
            return _sku;
        }
    }

    @Override
    public void setSku(String sku) {
        _sku = sku;
    }

    @JSON
    @Override
    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    @Override
    public void setName(String name) {
        _columnBitmask = -1L;

        _name = name;
    }

    @JSON
    @Override
    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    @Override
    public void setDescription(String description) {
        _columnBitmask = -1L;

        _description = description;
    }

    @JSON
    @Override
    public String getProperties() {
        if (_properties == null) {
            return StringPool.BLANK;
        } else {
            return _properties;
        }
    }

    @Override
    public void setProperties(String properties) {
        _properties = properties;
    }

    @JSON
    @Override
    public double getPrice() {
        return _price;
    }

    @Override
    public void setPrice(double price) {
        _price = price;
    }

    @JSON
    @Override
    public int getQuantity() {
        return _quantity;
    }

    @Override
    public void setQuantity(int quantity) {
        _quantity = quantity;
    }

    @JSON
    @Override
    public Date getShippedDate() {
        return _shippedDate;
    }

    @Override
    public void setShippedDate(Date shippedDate) {
        _shippedDate = shippedDate;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            ShoppingOrderItem.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public ShoppingOrderItem toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (ShoppingOrderItem) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        ShoppingOrderItemImpl shoppingOrderItemImpl = new ShoppingOrderItemImpl();

        shoppingOrderItemImpl.setShoppingOrderItemId(getShoppingOrderItemId());
        shoppingOrderItemImpl.setShoppingOrderId(getShoppingOrderId());
        shoppingOrderItemImpl.setArticleId(getArticleId());
        shoppingOrderItemImpl.setSku(getSku());
        shoppingOrderItemImpl.setName(getName());
        shoppingOrderItemImpl.setDescription(getDescription());
        shoppingOrderItemImpl.setProperties(getProperties());
        shoppingOrderItemImpl.setPrice(getPrice());
        shoppingOrderItemImpl.setQuantity(getQuantity());
        shoppingOrderItemImpl.setShippedDate(getShippedDate());

        shoppingOrderItemImpl.resetOriginalValues();

        return shoppingOrderItemImpl;
    }

    @Override
    public int compareTo(ShoppingOrderItem shoppingOrderItem) {
        int value = 0;

        value = getName().compareTo(shoppingOrderItem.getName());

        if (value != 0) {
            return value;
        }

        value = getDescription().compareTo(shoppingOrderItem.getDescription());

        if (value != 0) {
            return value;
        }

        return 0;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ShoppingOrderItem)) {
            return false;
        }

        ShoppingOrderItem shoppingOrderItem = (ShoppingOrderItem) obj;

        long primaryKey = shoppingOrderItem.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        ShoppingOrderItemModelImpl shoppingOrderItemModelImpl = this;

        shoppingOrderItemModelImpl._originalShoppingOrderItemId = shoppingOrderItemModelImpl._shoppingOrderItemId;

        shoppingOrderItemModelImpl._setOriginalShoppingOrderItemId = false;

        shoppingOrderItemModelImpl._originalShoppingOrderId = shoppingOrderItemModelImpl._shoppingOrderId;

        shoppingOrderItemModelImpl._setOriginalShoppingOrderId = false;

        shoppingOrderItemModelImpl._originalArticleId = shoppingOrderItemModelImpl._articleId;

        shoppingOrderItemModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<ShoppingOrderItem> toCacheModel() {
        ShoppingOrderItemCacheModel shoppingOrderItemCacheModel = new ShoppingOrderItemCacheModel();

        shoppingOrderItemCacheModel.shoppingOrderItemId = getShoppingOrderItemId();

        shoppingOrderItemCacheModel.shoppingOrderId = getShoppingOrderId();

        shoppingOrderItemCacheModel.articleId = getArticleId();

        String articleId = shoppingOrderItemCacheModel.articleId;

        if ((articleId != null) && (articleId.length() == 0)) {
            shoppingOrderItemCacheModel.articleId = null;
        }

        shoppingOrderItemCacheModel.sku = getSku();

        String sku = shoppingOrderItemCacheModel.sku;

        if ((sku != null) && (sku.length() == 0)) {
            shoppingOrderItemCacheModel.sku = null;
        }

        shoppingOrderItemCacheModel.name = getName();

        String name = shoppingOrderItemCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            shoppingOrderItemCacheModel.name = null;
        }

        shoppingOrderItemCacheModel.description = getDescription();

        String description = shoppingOrderItemCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            shoppingOrderItemCacheModel.description = null;
        }

        shoppingOrderItemCacheModel.properties = getProperties();

        String properties = shoppingOrderItemCacheModel.properties;

        if ((properties != null) && (properties.length() == 0)) {
            shoppingOrderItemCacheModel.properties = null;
        }

        shoppingOrderItemCacheModel.price = getPrice();

        shoppingOrderItemCacheModel.quantity = getQuantity();

        Date shippedDate = getShippedDate();

        if (shippedDate != null) {
            shoppingOrderItemCacheModel.shippedDate = shippedDate.getTime();
        } else {
            shoppingOrderItemCacheModel.shippedDate = Long.MIN_VALUE;
        }

        return shoppingOrderItemCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(21);

        sb.append("{shoppingOrderItemId=");
        sb.append(getShoppingOrderItemId());
        sb.append(", shoppingOrderId=");
        sb.append(getShoppingOrderId());
        sb.append(", articleId=");
        sb.append(getArticleId());
        sb.append(", sku=");
        sb.append(getSku());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", properties=");
        sb.append(getProperties());
        sb.append(", price=");
        sb.append(getPrice());
        sb.append(", quantity=");
        sb.append(getQuantity());
        sb.append(", shippedDate=");
        sb.append(getShippedDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(34);

        sb.append("<model><model-name>");
        sb.append("com.fsquare.shopping.model.ShoppingOrderItem");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>shoppingOrderItemId</column-name><column-value><![CDATA[");
        sb.append(getShoppingOrderItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>shoppingOrderId</column-name><column-value><![CDATA[");
        sb.append(getShoppingOrderId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>articleId</column-name><column-value><![CDATA[");
        sb.append(getArticleId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sku</column-name><column-value><![CDATA[");
        sb.append(getSku());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>properties</column-name><column-value><![CDATA[");
        sb.append(getProperties());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>price</column-name><column-value><![CDATA[");
        sb.append(getPrice());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>quantity</column-name><column-value><![CDATA[");
        sb.append(getQuantity());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>shippedDate</column-name><column-value><![CDATA[");
        sb.append(getShippedDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
