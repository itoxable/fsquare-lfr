package com.fsquare.shopping.service.base;

import com.fsquare.shopping.model.ShoppingShippingMethod;
import com.fsquare.shopping.service.ShoppingShippingMethodService;
import com.fsquare.shopping.service.persistence.ShoppingCouponPersistence;
import com.fsquare.shopping.service.persistence.ShoppingOrderItemPersistence;
import com.fsquare.shopping.service.persistence.ShoppingOrderPersistence;
import com.fsquare.shopping.service.persistence.ShoppingShippingMethodPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the shopping shipping method remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.fsquare.shopping.service.impl.ShoppingShippingMethodServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.fsquare.shopping.service.impl.ShoppingShippingMethodServiceImpl
 * @see com.fsquare.shopping.service.ShoppingShippingMethodServiceUtil
 * @generated
 */
public abstract class ShoppingShippingMethodServiceBaseImpl
    extends BaseServiceImpl implements ShoppingShippingMethodService,
        IdentifiableBean {
    @BeanReference(type = com.fsquare.shopping.service.ShoppingCouponLocalService.class)
    protected com.fsquare.shopping.service.ShoppingCouponLocalService shoppingCouponLocalService;
    @BeanReference(type = com.fsquare.shopping.service.ShoppingCouponService.class)
    protected com.fsquare.shopping.service.ShoppingCouponService shoppingCouponService;
    @BeanReference(type = ShoppingCouponPersistence.class)
    protected ShoppingCouponPersistence shoppingCouponPersistence;
    @BeanReference(type = com.fsquare.shopping.service.ShoppingOrderLocalService.class)
    protected com.fsquare.shopping.service.ShoppingOrderLocalService shoppingOrderLocalService;
    @BeanReference(type = com.fsquare.shopping.service.ShoppingOrderService.class)
    protected com.fsquare.shopping.service.ShoppingOrderService shoppingOrderService;
    @BeanReference(type = ShoppingOrderPersistence.class)
    protected ShoppingOrderPersistence shoppingOrderPersistence;
    @BeanReference(type = com.fsquare.shopping.service.ShoppingOrderItemLocalService.class)
    protected com.fsquare.shopping.service.ShoppingOrderItemLocalService shoppingOrderItemLocalService;
    @BeanReference(type = com.fsquare.shopping.service.ShoppingOrderItemService.class)
    protected com.fsquare.shopping.service.ShoppingOrderItemService shoppingOrderItemService;
    @BeanReference(type = ShoppingOrderItemPersistence.class)
    protected ShoppingOrderItemPersistence shoppingOrderItemPersistence;
    @BeanReference(type = com.fsquare.shopping.service.ShoppingShippingMethodLocalService.class)
    protected com.fsquare.shopping.service.ShoppingShippingMethodLocalService shoppingShippingMethodLocalService;
    @BeanReference(type = com.fsquare.shopping.service.ShoppingShippingMethodService.class)
    protected com.fsquare.shopping.service.ShoppingShippingMethodService shoppingShippingMethodService;
    @BeanReference(type = ShoppingShippingMethodPersistence.class)
    protected ShoppingShippingMethodPersistence shoppingShippingMethodPersistence;
    @BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
    protected com.liferay.counter.service.CounterLocalService counterLocalService;
    @BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
    protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
    @BeanReference(type = com.liferay.portal.service.UserLocalService.class)
    protected com.liferay.portal.service.UserLocalService userLocalService;
    @BeanReference(type = com.liferay.portal.service.UserService.class)
    protected com.liferay.portal.service.UserService userService;
    @BeanReference(type = UserPersistence.class)
    protected UserPersistence userPersistence;
    private String _beanIdentifier;
    private ClassLoader _classLoader;
    private ShoppingShippingMethodServiceClpInvoker _clpInvoker = new ShoppingShippingMethodServiceClpInvoker();

    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. Always use {@link com.fsquare.shopping.service.ShoppingShippingMethodServiceUtil} to access the shopping shipping method remote service.
     */

    /**
     * Returns the shopping coupon local service.
     *
     * @return the shopping coupon local service
     */
    public com.fsquare.shopping.service.ShoppingCouponLocalService getShoppingCouponLocalService() {
        return shoppingCouponLocalService;
    }

    /**
     * Sets the shopping coupon local service.
     *
     * @param shoppingCouponLocalService the shopping coupon local service
     */
    public void setShoppingCouponLocalService(
        com.fsquare.shopping.service.ShoppingCouponLocalService shoppingCouponLocalService) {
        this.shoppingCouponLocalService = shoppingCouponLocalService;
    }

    /**
     * Returns the shopping coupon remote service.
     *
     * @return the shopping coupon remote service
     */
    public com.fsquare.shopping.service.ShoppingCouponService getShoppingCouponService() {
        return shoppingCouponService;
    }

    /**
     * Sets the shopping coupon remote service.
     *
     * @param shoppingCouponService the shopping coupon remote service
     */
    public void setShoppingCouponService(
        com.fsquare.shopping.service.ShoppingCouponService shoppingCouponService) {
        this.shoppingCouponService = shoppingCouponService;
    }

    /**
     * Returns the shopping coupon persistence.
     *
     * @return the shopping coupon persistence
     */
    public ShoppingCouponPersistence getShoppingCouponPersistence() {
        return shoppingCouponPersistence;
    }

    /**
     * Sets the shopping coupon persistence.
     *
     * @param shoppingCouponPersistence the shopping coupon persistence
     */
    public void setShoppingCouponPersistence(
        ShoppingCouponPersistence shoppingCouponPersistence) {
        this.shoppingCouponPersistence = shoppingCouponPersistence;
    }

    /**
     * Returns the shopping order local service.
     *
     * @return the shopping order local service
     */
    public com.fsquare.shopping.service.ShoppingOrderLocalService getShoppingOrderLocalService() {
        return shoppingOrderLocalService;
    }

    /**
     * Sets the shopping order local service.
     *
     * @param shoppingOrderLocalService the shopping order local service
     */
    public void setShoppingOrderLocalService(
        com.fsquare.shopping.service.ShoppingOrderLocalService shoppingOrderLocalService) {
        this.shoppingOrderLocalService = shoppingOrderLocalService;
    }

    /**
     * Returns the shopping order remote service.
     *
     * @return the shopping order remote service
     */
    public com.fsquare.shopping.service.ShoppingOrderService getShoppingOrderService() {
        return shoppingOrderService;
    }

    /**
     * Sets the shopping order remote service.
     *
     * @param shoppingOrderService the shopping order remote service
     */
    public void setShoppingOrderService(
        com.fsquare.shopping.service.ShoppingOrderService shoppingOrderService) {
        this.shoppingOrderService = shoppingOrderService;
    }

    /**
     * Returns the shopping order persistence.
     *
     * @return the shopping order persistence
     */
    public ShoppingOrderPersistence getShoppingOrderPersistence() {
        return shoppingOrderPersistence;
    }

    /**
     * Sets the shopping order persistence.
     *
     * @param shoppingOrderPersistence the shopping order persistence
     */
    public void setShoppingOrderPersistence(
        ShoppingOrderPersistence shoppingOrderPersistence) {
        this.shoppingOrderPersistence = shoppingOrderPersistence;
    }

    /**
     * Returns the shopping order item local service.
     *
     * @return the shopping order item local service
     */
    public com.fsquare.shopping.service.ShoppingOrderItemLocalService getShoppingOrderItemLocalService() {
        return shoppingOrderItemLocalService;
    }

    /**
     * Sets the shopping order item local service.
     *
     * @param shoppingOrderItemLocalService the shopping order item local service
     */
    public void setShoppingOrderItemLocalService(
        com.fsquare.shopping.service.ShoppingOrderItemLocalService shoppingOrderItemLocalService) {
        this.shoppingOrderItemLocalService = shoppingOrderItemLocalService;
    }

    /**
     * Returns the shopping order item remote service.
     *
     * @return the shopping order item remote service
     */
    public com.fsquare.shopping.service.ShoppingOrderItemService getShoppingOrderItemService() {
        return shoppingOrderItemService;
    }

    /**
     * Sets the shopping order item remote service.
     *
     * @param shoppingOrderItemService the shopping order item remote service
     */
    public void setShoppingOrderItemService(
        com.fsquare.shopping.service.ShoppingOrderItemService shoppingOrderItemService) {
        this.shoppingOrderItemService = shoppingOrderItemService;
    }

    /**
     * Returns the shopping order item persistence.
     *
     * @return the shopping order item persistence
     */
    public ShoppingOrderItemPersistence getShoppingOrderItemPersistence() {
        return shoppingOrderItemPersistence;
    }

    /**
     * Sets the shopping order item persistence.
     *
     * @param shoppingOrderItemPersistence the shopping order item persistence
     */
    public void setShoppingOrderItemPersistence(
        ShoppingOrderItemPersistence shoppingOrderItemPersistence) {
        this.shoppingOrderItemPersistence = shoppingOrderItemPersistence;
    }

    /**
     * Returns the shopping shipping method local service.
     *
     * @return the shopping shipping method local service
     */
    public com.fsquare.shopping.service.ShoppingShippingMethodLocalService getShoppingShippingMethodLocalService() {
        return shoppingShippingMethodLocalService;
    }

    /**
     * Sets the shopping shipping method local service.
     *
     * @param shoppingShippingMethodLocalService the shopping shipping method local service
     */
    public void setShoppingShippingMethodLocalService(
        com.fsquare.shopping.service.ShoppingShippingMethodLocalService shoppingShippingMethodLocalService) {
        this.shoppingShippingMethodLocalService = shoppingShippingMethodLocalService;
    }

    /**
     * Returns the shopping shipping method remote service.
     *
     * @return the shopping shipping method remote service
     */
    public com.fsquare.shopping.service.ShoppingShippingMethodService getShoppingShippingMethodService() {
        return shoppingShippingMethodService;
    }

    /**
     * Sets the shopping shipping method remote service.
     *
     * @param shoppingShippingMethodService the shopping shipping method remote service
     */
    public void setShoppingShippingMethodService(
        com.fsquare.shopping.service.ShoppingShippingMethodService shoppingShippingMethodService) {
        this.shoppingShippingMethodService = shoppingShippingMethodService;
    }

    /**
     * Returns the shopping shipping method persistence.
     *
     * @return the shopping shipping method persistence
     */
    public ShoppingShippingMethodPersistence getShoppingShippingMethodPersistence() {
        return shoppingShippingMethodPersistence;
    }

    /**
     * Sets the shopping shipping method persistence.
     *
     * @param shoppingShippingMethodPersistence the shopping shipping method persistence
     */
    public void setShoppingShippingMethodPersistence(
        ShoppingShippingMethodPersistence shoppingShippingMethodPersistence) {
        this.shoppingShippingMethodPersistence = shoppingShippingMethodPersistence;
    }

    /**
     * Returns the counter local service.
     *
     * @return the counter local service
     */
    public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
        return counterLocalService;
    }

    /**
     * Sets the counter local service.
     *
     * @param counterLocalService the counter local service
     */
    public void setCounterLocalService(
        com.liferay.counter.service.CounterLocalService counterLocalService) {
        this.counterLocalService = counterLocalService;
    }

    /**
     * Returns the resource local service.
     *
     * @return the resource local service
     */
    public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
        return resourceLocalService;
    }

    /**
     * Sets the resource local service.
     *
     * @param resourceLocalService the resource local service
     */
    public void setResourceLocalService(
        com.liferay.portal.service.ResourceLocalService resourceLocalService) {
        this.resourceLocalService = resourceLocalService;
    }

    /**
     * Returns the user local service.
     *
     * @return the user local service
     */
    public com.liferay.portal.service.UserLocalService getUserLocalService() {
        return userLocalService;
    }

    /**
     * Sets the user local service.
     *
     * @param userLocalService the user local service
     */
    public void setUserLocalService(
        com.liferay.portal.service.UserLocalService userLocalService) {
        this.userLocalService = userLocalService;
    }

    /**
     * Returns the user remote service.
     *
     * @return the user remote service
     */
    public com.liferay.portal.service.UserService getUserService() {
        return userService;
    }

    /**
     * Sets the user remote service.
     *
     * @param userService the user remote service
     */
    public void setUserService(
        com.liferay.portal.service.UserService userService) {
        this.userService = userService;
    }

    /**
     * Returns the user persistence.
     *
     * @return the user persistence
     */
    public UserPersistence getUserPersistence() {
        return userPersistence;
    }

    /**
     * Sets the user persistence.
     *
     * @param userPersistence the user persistence
     */
    public void setUserPersistence(UserPersistence userPersistence) {
        this.userPersistence = userPersistence;
    }

    public void afterPropertiesSet() {
        Class<?> clazz = getClass();

        _classLoader = clazz.getClassLoader();
    }

    public void destroy() {
    }

    /**
     * Returns the Spring bean ID for this bean.
     *
     * @return the Spring bean ID for this bean
     */
    @Override
    public String getBeanIdentifier() {
        return _beanIdentifier;
    }

    /**
     * Sets the Spring bean ID for this bean.
     *
     * @param beanIdentifier the Spring bean ID for this bean
     */
    @Override
    public void setBeanIdentifier(String beanIdentifier) {
        _beanIdentifier = beanIdentifier;
    }

    @Override
    public Object invokeMethod(String name, String[] parameterTypes,
        Object[] arguments) throws Throwable {
        Thread currentThread = Thread.currentThread();

        ClassLoader contextClassLoader = currentThread.getContextClassLoader();

        if (contextClassLoader != _classLoader) {
            currentThread.setContextClassLoader(_classLoader);
        }

        try {
            return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
        } finally {
            if (contextClassLoader != _classLoader) {
                currentThread.setContextClassLoader(contextClassLoader);
            }
        }
    }

    protected Class<?> getModelClass() {
        return ShoppingShippingMethod.class;
    }

    protected String getModelClassName() {
        return ShoppingShippingMethod.class.getName();
    }

    /**
     * Performs an SQL query.
     *
     * @param sql the sql query
     */
    protected void runSQL(String sql) throws SystemException {
        try {
            DataSource dataSource = shoppingShippingMethodPersistence.getDataSource();

            SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
                    sql, new int[0]);

            sqlUpdate.update();
        } catch (Exception e) {
            throw new SystemException(e);
        }
    }
}
